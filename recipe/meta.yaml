{% set provider = "azurerm" %}
{% set goname = "github.com/terraform-providers/terraform-provider-"+provider.lower() %}
{% set version = "2.6.0" %}

{% set name = goname.split('/')[-1] %}
{% set pkg_src = ('src/'+goname).replace("/",os.sep) %}

{% set x4_plugin = name + '_v' + version + "_x4" + (".exe" if win else "")%}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - folder: {{ pkg_src }}
    url: https://{{ goname }}/archive/v{{ version }}.tar.gz
    sha256: b062b0b9acdb85f533d1c624b630c478b08826b144f97b8663455ab4c1114160

build:
  number: 0
  script:
    - pushd {{ pkg_src }}
    - GOBIN=$(go env GOBIN)                     # [not win]
    - go build -v -o $GOBIN/{{ x4_plugin }} .   # [not win]
    - go env GOBIN > gobin                      # [win]
    - set /p GOBIN= < gobin                     # [win]
    - del gobin                                 # [win]
    - go build -v -o %GOBIN%\{{ x4_plugin }} .  # [win]

requirements:
  build:
    - {{ compiler('go') }} >=1.13
  run:
    - terraform >=0.12

test:
  requires:   # [win]
    - m2-bash       # [win]
    - m2-coreutils  # [win]

  commands:
    - bash -euf -c "echo 'provider \"{{ provider|lower }}\" { version=\"{{ version }}\" }' > init.tf"
    - terraform init
    # Tests that no plugins were downloaded
    - test -f .terraform/plugins/{{ goos }}_{{ goarch }}/lock.json
    - test ! -f .terraform/plugins/{{ goos }}_{{ goarch }}/{{ x4_plugin }}

about:
  home: https://www.terraform.io
  license: MPL-2.0
  license_family: MOZILLA
  license_file: {{ pkg_src }}/LICENSE
  summary: The Terraform Azure provider
  doc_url: https://www.terraform.io/docs/providers/{{ provider }}/index.html
  dev_url: https://github.com/terraform-providers/{{ name }}

extra:
  recipe-maintainers:
    - conda-forge/terraform
    - dhirschfeld
